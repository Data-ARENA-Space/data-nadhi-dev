services:
  # ----------------------------------
  # Core Application Databases/Services
  # ----------------------------------
  mongo:
    image: mongo:7
    container_name: datanadhi-mongo
    ports:
      - "27017:27017"
    networks:
      - datanadhi-net
    volumes:
      - mongo_data:/data/db
    restart: unless-stopped

  postgres:
    image: postgres:16
    container_name: datanadhi-postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: datanadhi_dev
      PGDATA: /var/lib/postgresql/data/pgdata
    ports:
      - "5432:5432"
    networks:
      - datanadhi-net
    volumes:
      - postgres_data:/var/lib/postgresql/data
    restart: unless-stopped

  redis:
    image: redis:7
    container_name: datanadhi-redis
    ports:
      - "6379:6379"
    networks:
      - datanadhi-net
    volumes:
      - redis_data:/data
    restart: unless-stopped

  # ----------------------------------
  # Temporal Infrastructure
  # ----------------------------------

  temporal-postgres:
    image: postgres:16
    container_name: temporal-postgres
    platform: linux/arm64/v8
    environment:
      POSTGRES_USER: temporal
      POSTGRES_PASSWORD: temporal
      POSTGRES_DB: temporal
    ports:
      - "5433:5432"
    networks:
      - datanadhi-net
    volumes:
      - temporal_pg_data:/var/lib/postgresql/data
      - ./init-temporal-db.sh:/docker-entrypoint-initdb.d/init-temporal-db.sh
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U temporal -d temporal"]
      interval: 5s
      timeout: 5s
      retries: 10
    restart: unless-stopped

  temporal:
    image: temporalio/auto-setup:latest
    container_name: datanadhi-temporal
    platform: linux/amd64
    environment:
      - DB=postgres12
      - POSTGRES_SEEDS=temporal-postgres
      - POSTGRES_USER=temporal
      - POSTGRES_PWD=temporal
      - DBNAME=temporal
      - VISIBILITY_DBNAME=temporal_visibility
    ports:
      - "7233:7233"
    networks:
      - datanadhi-net
    depends_on:
      temporal-postgres:
        condition: service_healthy
    restart: unless-stopped
    entrypoint: /bin/sh
    command: 
      - -c
      - |
        # Simple TCP wait since psql is not available
        until nc -z temporal-postgres 5432; do
          echo "Waiting for PostgreSQL..."
          sleep 2
        done
        echo "PostgreSQL is up - starting Temporal"
        exec /etc/temporal/entrypoint.sh

  temporal-web:
    image: temporalio/web:latest
    container_name: datanadhi-temporal-web
    platform: linux/amd64
    environment:
      TEMPORAL_GRPC_ENDPOINT: temporal:7233
      TEMPORAL_PERMIT_WRITE_API: "true"
    ports:
      - "8088:8088"
    networks:
      - datanadhi-net
    depends_on:
      - temporal
    restart: unless-stopped

  minio:
    image: minio/minio:latest
    container_name: datanadhi-minio
    ports:
      - "9000:9000"   # MinIO API
      - "9001:9001"   # MinIO console
    environment:
      MINIO_ROOT_USER: minio
      MINIO_ROOT_PASSWORD: minio123
    command: server /data --console-address ":9001"
    networks:
      - datanadhi-net
    volumes:
      - ./data/minio:/data


# ----------------------------------
# Volumes & Networks
# ----------------------------------
volumes:
  mongo_data:
  postgres_data:
  redis_data:
  temporal_pg_data:

networks:
  datanadhi-net:
    external: true
